<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="450" onload="init(evt)" viewBox="0 0 1200 450" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		if (func != null)
			func = func.replace(/ .*/, "");
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
				return a - b;
			if (a < b || a > b)
				return a - b;
			return matches[b] - matches[a];
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="450.0" fill="url(#background)"  />
<text text-anchor="middle" x="600.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Flame Graph</text>
<text text-anchor="" x="10.00" y="433" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="1090.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="1090.00" y="433" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>intel_pmu_enable_all (4 samples, 7.27%)</title><rect x="181.6" y="97" width="85.9" height="15.0" fill="rgb(207,60,39)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="107.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >intel_pmu_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_msr_safe (16 samples, 29.09%)</title><rect x="374.7" y="337" width="343.3" height="15.0" fill="rgb(238,220,4)" rx="2" ry="2" />
<text text-anchor="" x="377.73" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >native_write_msr_safe</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>system_call_fastpath (2 samples, 3.64%)</title><rect x="331.8" y="337" width="42.9" height="15.0" fill="rgb(238,139,41)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >syst..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>libjaypea-api (55 samples, 100.00%)</title><rect x="10.0" y="385" width="1180.0" height="15.0" fill="rgb(227,53,26)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="395.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >libjaypea-api</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>system_call_fastpath (1 samples, 1.82%)</title><rect x="1125.6" y="353" width="21.5" height="15.0" fill="rgb(216,71,22)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>end_repeat_nmi (1 samples, 1.82%)</title><rect x="181.6" y="65" width="21.5" height="15.0" fill="rgb(253,125,47)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>intel_pmu_enable_all (16 samples, 29.09%)</title><rect x="718.0" y="241" width="343.3" height="15.0" fill="rgb(245,10,43)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >intel_pmu_enable_all</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>main (1 samples, 1.82%)</title><rect x="1147.1" y="353" width="21.4" height="15.0" fill="rgb(213,224,15)" rx="2" ry="2" />
<text text-anchor="" x="1150.09" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >m..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>end_repeat_nmi (5 samples, 9.09%)</title><rect x="739.5" y="209" width="107.2" height="15.0" fill="rgb(219,136,52)" rx="2" ry="2" />
<text text-anchor="" x="742.45" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >end_repeat_nmi</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>system_call_fastpath (4 samples, 7.27%)</title><rect x="181.6" y="273" width="85.9" height="15.0" fill="rgb(211,215,15)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >system_cal..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>finish_task_switch (2 samples, 3.64%)</title><rect x="331.8" y="225" width="42.9" height="15.0" fill="rgb(225,189,7)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >fini..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>pty_write (1 samples, 1.82%)</title><rect x="267.5" y="257" width="21.4" height="15.0" fill="rgb(233,11,52)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >p..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tty_insert_flip_string_fixed_flag (1 samples, 1.82%)</title><rect x="267.5" y="241" width="21.4" height="15.0" fill="rgb(245,107,43)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >t..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libc-2.17.so] (12 samples, 21.82%)</title><rect x="10.0" y="289" width="257.5" height="15.0" fill="rgb(206,108,24)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libc-2.17.so]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>hrtimer_nanosleep (1 samples, 1.82%)</title><rect x="1125.6" y="321" width="21.5" height="15.0" fill="rgb(216,176,45)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >h..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_msr_safe (1 samples, 1.82%)</title><rect x="353.3" y="129" width="21.4" height="15.0" fill="rgb(209,192,26)" rx="2" ry="2" />
<text text-anchor="" x="356.27" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>SymmetricEpollServer::SymmetricEpollServer (1 samples, 1.82%)</title><rect x="1147.1" y="305" width="21.4" height="15.0" fill="rgb(235,162,4)" rx="2" ry="2" />
<text text-anchor="" x="1150.09" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >S..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__intel_pmu_enable_all.isra.12 (16 samples, 29.09%)</title><rect x="718.0" y="225" width="343.3" height="15.0" fill="rgb(231,170,21)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__intel_pmu_enable_all.isra.12</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_nmi (1 samples, 1.82%)</title><rect x="331.8" y="113" width="21.5" height="15.0" fill="rgb(208,121,26)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >d..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__intel_pmu_enable_all.isra.12 (1 samples, 1.82%)</title><rect x="1125.6" y="177" width="21.5" height="15.0" fill="rgb(210,0,28)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>call_rwsem_down_write_failed (2 samples, 3.64%)</title><rect x="331.8" y="289" width="42.9" height="15.0" fill="rgb(210,118,35)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >call..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>schedule_hrtimeout_range (4 samples, 7.27%)</title><rect x="181.6" y="225" width="85.9" height="15.0" fill="rgb(238,142,3)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >schedule_h..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>x86_pmu_enable (16 samples, 29.09%)</title><rect x="718.0" y="257" width="343.3" height="15.0" fill="rgb(240,41,42)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x86_pmu_enable</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__libc_start_main (1 samples, 1.82%)</title><rect x="1147.1" y="369" width="21.4" height="15.0" fill="rgb(254,188,28)" rx="2" ry="2" />
<text text-anchor="" x="1150.09" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__intel_pmu_enable_all.isra.12 (4 samples, 7.27%)</title><rect x="181.6" y="81" width="85.9" height="15.0" fill="rgb(235,221,24)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="91.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__intel_pm..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::unordered_map&lt;int, int, std::hash&lt;int&gt;, std::equal_to&lt;int&gt;, std::allocator&lt;std::pair&lt;int const, int&gt; &gt; &gt;::unordered_map (1 samples, 1.82%)</title><rect x="1147.1" y="273" width="21.4" height="15.0" fill="rgb(248,20,11)" rx="2" ry="2" />
<text text-anchor="" x="1150.09" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_msr_safe (2 samples, 3.64%)</title><rect x="288.9" y="337" width="42.9" height="15.0" fill="rgb(237,70,38)" rx="2" ry="2" />
<text text-anchor="" x="291.91" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nati..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>perf_pmu_enable (1 samples, 1.82%)</title><rect x="1125.6" y="225" width="21.5" height="15.0" fill="rgb(210,131,35)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >p..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[unknown] (37 samples, 67.27%)</title><rect x="267.5" y="369" width="793.8" height="15.0" fill="rgb(249,156,51)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[unknown]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>finish_task_switch (1 samples, 1.82%)</title><rect x="1125.6" y="257" width="21.5" height="15.0" fill="rgb(221,40,37)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >f..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>x86_pmu_enable (4 samples, 7.27%)</title><rect x="181.6" y="113" width="85.9" height="15.0" fill="rgb(222,155,37)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="123.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x86_pmu_en..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>finish_task_switch (4 samples, 7.27%)</title><rect x="181.6" y="161" width="85.9" height="15.0" fill="rgb(214,228,54)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >finish_tas..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_cr2 (2 samples, 3.64%)</title><rect x="739.5" y="177" width="42.9" height="15.0" fill="rgb(213,224,3)" rx="2" ry="2" />
<text text-anchor="" x="742.45" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nati..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>finish_task_switch (16 samples, 29.09%)</title><rect x="718.0" y="305" width="343.3" height="15.0" fill="rgb(226,38,47)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >finish_task_switch</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__intel_pmu_enable_all.isra.12 (2 samples, 3.64%)</title><rect x="331.8" y="145" width="42.9" height="15.0" fill="rgb(219,131,40)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__in..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>EpollServer::EpollServer (1 samples, 1.82%)</title><rect x="1147.1" y="289" width="21.4" height="15.0" fill="rgb(253,225,31)" rx="2" ry="2" />
<text text-anchor="" x="1150.09" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >E..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__perf_event_task_sched_in (2 samples, 3.64%)</title><rect x="331.8" y="209" width="42.9" height="15.0" fill="rgb(205,48,37)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__pe..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___libc_nanosleep (4 samples, 7.27%)</title><rect x="1061.3" y="369" width="85.8" height="15.0" fill="rgb(233,137,20)" rx="2" ry="2" />
<text text-anchor="" x="1064.27" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__GI___lib..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (55 samples, 100%)</title><rect x="10.0" y="401" width="1180.0" height="15.0" fill="rgb(239,163,54)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="411.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_mprotect (2 samples, 3.64%)</title><rect x="331.8" y="321" width="42.9" height="15.0" fill="rgb(253,179,16)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sys_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>schedule_tail (16 samples, 29.09%)</title><rect x="718.0" y="321" width="343.3" height="15.0" fill="rgb(205,78,29)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >schedule_tail</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_msr_safe (8 samples, 14.55%)</title><rect x="846.7" y="209" width="171.7" height="15.0" fill="rgb(234,103,14)" rx="2" ry="2" />
<text text-anchor="" x="849.73" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >native_write_msr_safe</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>end_repeat_nmi (1 samples, 1.82%)</title><rect x="331.8" y="129" width="21.5" height="15.0" fill="rgb(211,3,13)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_write (1 samples, 1.82%)</title><rect x="267.5" y="321" width="21.4" height="15.0" fill="rgb(238,147,50)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__schedule (2 samples, 3.64%)</title><rect x="331.8" y="241" width="42.9" height="15.0" fill="rgb(244,22,34)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__sc..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Mem_fn&lt;void  (12 samples, 21.82%)</title><rect x="10.0" y="305" width="257.5" height="15.0" fill="rgb(248,93,41)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::_Mem_fn&lt;void </text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmi_handle.isra.0 (1 samples, 1.82%)</title><rect x="181.6" y="33" width="21.5" height="15.0" fill="rgb(223,57,37)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="43.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>n_tty_write (1 samples, 1.82%)</title><rect x="267.5" y="273" width="21.4" height="15.0" fill="rgb(222,17,18)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmi_restore (2 samples, 3.64%)</title><rect x="1018.4" y="209" width="42.9" height="15.0" fill="rgb(242,188,1)" rx="2" ry="2" />
<text text-anchor="" x="1021.36" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nmi_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>DistributedNode::DistributedNode (1 samples, 1.82%)</title><rect x="1147.1" y="321" width="21.4" height="15.0" fill="rgb(221,170,17)" rx="2" ry="2" />
<text text-anchor="" x="1150.09" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >D..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_sched_clock (2 samples, 3.64%)</title><rect x="10.0" y="273" width="42.9" height="15.0" fill="rgb(235,121,7)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nati..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_nanosleep (1 samples, 1.82%)</title><rect x="1125.6" y="337" width="21.5" height="15.0" fill="rgb(215,96,24)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>schedule (4 samples, 7.27%)</title><rect x="181.6" y="193" width="85.9" height="15.0" fill="rgb(238,184,19)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >schedule</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Bind_simple&lt;std::_Mem_fn&lt;void  (12 samples, 21.82%)</title><rect x="10.0" y="337" width="257.5" height="15.0" fill="rgb(249,83,39)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::_Bind_simple&lt;std::_Mem_fn&lt;void </text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_nmi (3 samples, 5.45%)</title><rect x="739.5" y="193" width="64.3" height="15.0" fill="rgb(248,135,27)" rx="2" ry="2" />
<text text-anchor="" x="742.45" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >do_nmi</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_msr_safe (1 samples, 1.82%)</title><rect x="1125.6" y="161" width="21.5" height="15.0" fill="rgb(234,228,26)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___libc_write (1 samples, 1.82%)</title><rect x="267.5" y="353" width="21.4" height="15.0" fill="rgb(236,125,11)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>rwsem_down_write_failed (2 samples, 3.64%)</title><rect x="331.8" y="273" width="42.9" height="15.0" fill="rgb(220,62,48)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >rwse..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_nmi (1 samples, 1.82%)</title><rect x="181.6" y="49" width="21.5" height="15.0" fill="rgb(240,196,15)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="59.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >d..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ep_poll (4 samples, 7.27%)</title><rect x="181.6" y="241" width="85.9" height="15.0" fill="rgb(228,38,45)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ep_poll</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>x86_pmu_enable (2 samples, 3.64%)</title><rect x="331.8" y="177" width="42.9" height="15.0" fill="rgb(239,137,38)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x86_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__schedule (1 samples, 1.82%)</title><rect x="1125.6" y="273" width="21.5" height="15.0" fill="rgb(211,125,34)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_msr_safe (6 samples, 10.91%)</title><rect x="52.9" y="273" width="128.7" height="15.0" fill="rgb(225,64,54)" rx="2" ry="2" />
<text text-anchor="" x="55.91" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >native_write_msr..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>perf_pmu_enable (4 samples, 7.27%)</title><rect x="181.6" y="129" width="85.9" height="15.0" fill="rgb(212,41,1)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="139.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >perf_pmu_e..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_nanosleep (1 samples, 1.82%)</title><rect x="1125.6" y="305" width="21.5" height="15.0" fill="rgb(250,179,24)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >d..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>[libstdc++.so.6.0.19] (12 samples, 21.82%)</title><rect x="10.0" y="369" width="257.5" height="15.0" fill="rgb(209,133,1)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >[libstdc++.so.6.0.19]</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__perf_event_task_sched_in (16 samples, 29.09%)</title><rect x="718.0" y="289" width="343.3" height="15.0" fill="rgb(231,142,28)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__perf_event_task_sched_in</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>schedule_hrtimeout_range_clock (4 samples, 7.27%)</title><rect x="181.6" y="209" width="85.9" height="15.0" fill="rgb(242,45,43)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >schedule_h..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>nmi_handle.isra.0 (1 samples, 1.82%)</title><rect x="782.4" y="177" width="21.4" height="15.0" fill="rgb(241,81,3)" rx="2" ry="2" />
<text text-anchor="" x="785.36" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>vfs_write (1 samples, 1.82%)</title><rect x="267.5" y="305" width="21.4" height="15.0" fill="rgb(216,187,4)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >v..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>schedule (1 samples, 1.82%)</title><rect x="1125.6" y="289" width="21.5" height="15.0" fill="rgb(227,180,11)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__GI___mprotect (4 samples, 7.27%)</title><rect x="288.9" y="353" width="85.8" height="15.0" fill="rgb(253,75,35)" rx="2" ry="2" />
<text text-anchor="" x="291.91" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__GI___mpr..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tty_buffer_request_room (1 samples, 1.82%)</title><rect x="267.5" y="225" width="21.4" height="15.0" fill="rgb(234,140,27)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="235.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >t..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>Util::parse_arguments (1 samples, 1.82%)</title><rect x="1147.1" y="337" width="21.4" height="15.0" fill="rgb(230,185,6)" rx="2" ry="2" />
<text text-anchor="" x="1150.09" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >U..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>perf_pmu_enable (16 samples, 29.09%)</title><rect x="718.0" y="273" width="343.3" height="15.0" fill="rgb(216,27,21)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="283.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >perf_pmu_enable</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>intel_pmu_enable_all (2 samples, 3.64%)</title><rect x="331.8" y="161" width="42.9" height="15.0" fill="rgb(231,86,43)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="171.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >inte..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__clone (32 samples, 58.18%)</title><rect x="374.7" y="353" width="686.6" height="15.0" fill="rgb(210,153,4)" rx="2" ry="2" />
<text text-anchor="" x="377.73" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__clone</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_msr_safe (3 samples, 5.45%)</title><rect x="203.1" y="65" width="64.4" height="15.0" fill="rgb(246,218,6)" rx="2" ry="2" />
<text text-anchor="" x="206.09" y="75.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >native_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__perf_event_task_sched_in (4 samples, 7.27%)</title><rect x="181.6" y="145" width="85.9" height="15.0" fill="rgb(235,118,47)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="155.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__perf_eve..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::_Bind_simple&lt;std::_Mem_fn&lt;void  (12 samples, 21.82%)</title><rect x="10.0" y="321" width="257.5" height="15.0" fill="rgb(228,229,5)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="331.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::_Bind_simple&lt;std::_Mem_fn&lt;void </text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_cr2 (2 samples, 3.64%)</title><rect x="803.8" y="193" width="42.9" height="15.0" fill="rgb(234,67,39)" rx="2" ry="2" />
<text text-anchor="" x="806.82" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nati..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_lookup_x (1 samples, 1.82%)</title><rect x="1168.5" y="369" width="21.5" height="15.0" fill="rgb(208,34,7)" rx="2" ry="2" />
<text text-anchor="" x="1171.55" y="379.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >d..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>std::thread::_Impl&lt;std::_Bind_simple&lt;std::_Mem_fn&lt;void  (12 samples, 21.82%)</title><rect x="10.0" y="353" width="257.5" height="15.0" fill="rgb(235,179,49)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >std::thread::_Impl&lt;std::_Bind_simp..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sys_epoll_wait (4 samples, 7.27%)</title><rect x="181.6" y="257" width="85.9" height="15.0" fill="rgb(243,69,40)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sys_epoll_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>down_write (2 samples, 3.64%)</title><rect x="331.8" y="305" width="42.9" height="15.0" fill="rgb(210,203,49)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="315.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >down..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>do_nmi (1 samples, 1.82%)</title><rect x="718.0" y="209" width="21.5" height="15.0" fill="rgb(236,173,31)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >d..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__perf_event_task_sched_in (1 samples, 1.82%)</title><rect x="1125.6" y="241" width="21.5" height="15.0" fill="rgb(252,196,4)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="251.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >_..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_write_msr_safe (2 samples, 3.64%)</title><rect x="1082.7" y="353" width="42.9" height="15.0" fill="rgb(207,83,37)" rx="2" ry="2" />
<text text-anchor="" x="1085.73" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >nati..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ret_from_fork (16 samples, 29.09%)</title><rect x="718.0" y="337" width="343.3" height="15.0" fill="rgb(224,103,33)" rx="2" ry="2" />
<text text-anchor="" x="721.00" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ret_from_fork</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>system_call_fastpath (1 samples, 1.82%)</title><rect x="267.5" y="337" width="21.4" height="15.0" fill="rgb(219,76,2)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="347.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >s..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>intel_pmu_enable_all (1 samples, 1.82%)</title><rect x="1125.6" y="193" width="21.5" height="15.0" fill="rgb(211,182,34)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >i..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>tty_write (1 samples, 1.82%)</title><rect x="267.5" y="289" width="21.4" height="15.0" fill="rgb(216,189,30)" rx="2" ry="2" />
<text text-anchor="" x="270.45" y="299.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >t..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>schedule (2 samples, 3.64%)</title><rect x="331.8" y="257" width="42.9" height="15.0" fill="rgb(235,17,25)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="267.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sche..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>native_sched_clock (1 samples, 1.82%)</title><rect x="1061.3" y="353" width="21.4" height="15.0" fill="rgb(230,103,42)" rx="2" ry="2" />
<text text-anchor="" x="1064.27" y="363.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >n..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>x86_pmu_enable (1 samples, 1.82%)</title><rect x="1125.6" y="209" width="21.5" height="15.0" fill="rgb(238,141,38)" rx="2" ry="2" />
<text text-anchor="" x="1128.64" y="219.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >x..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>__schedule (4 samples, 7.27%)</title><rect x="181.6" y="177" width="85.9" height="15.0" fill="rgb(251,175,0)" rx="2" ry="2" />
<text text-anchor="" x="184.64" y="187.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >__schedule</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>perf_pmu_enable (2 samples, 3.64%)</title><rect x="331.8" y="193" width="42.9" height="15.0" fill="rgb(215,206,32)" rx="2" ry="2" />
<text text-anchor="" x="334.82" y="203.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >perf..</text>
</g>
</svg>
